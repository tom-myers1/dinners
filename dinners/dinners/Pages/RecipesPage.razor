@page "/recipes"

@inject ProductServices service

<div class="container">

    <div class="row bg-light">
        <table class="table table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th>Recipe ID</th>
                    <th>Title</th>
                    <th>Servings</th>
                    <th>Delete Recipe</th>
                </tr>
            </thead>
            <tbody>
                @if (Recipes.Any())
                {
                    @foreach (var recipe in Recipes)
                    {
                        <tr @onclick="(() => SetRecipesForUpdate(recipe))">
                            <td>@recipe.Id</td>
                            <td>@recipe.Title</td>
                            <td>@recipe.Servings</td>
                            <td><button class="btn btn-danger" @onclick="(() => DeleteRecipes(recipe))">Delete</button></td>
                        </tr>
                    }
                }
                else
                {
                    <tr><td colspan="6"><strong>No recipes available</strong></td></tr>
                }
            </tbody>
        </table>
    </div>

    <div class="row m-5">
        <div class="col-5 bg-light m-2 justify-content-start">

            <div class="p-3 mb-3 bg-primary text-white text-center">Add New Recipe</div>

            <EditForm Model="@NewRecipes">
                <div class="form-group">
                    <label for="title">Recipe Title</label>
                    <input type="text" id="title" class="form-control" @bind-value="@NewRecipes.Title" />
                </div>

                <div class="form-group">
                    <label for="serving">serving</label>
                    <input type="number" id="serving" class="form-control" @bind="@NewRecipes.Servings" />
                </div>

                <div class="form-group">
                    <label for="servngunit">servingunit</label>
                    <input type="text" id="serving unit" class="form-control" @bind="@NewRecipes.ServingsUnit" />
                </div>


                <div class="text-center p-3 mb-3">
                    <button class="btn btn-info" @onclick="AddNewRecipes"> Add Recipe</button>
                </div>
            </EditForm>
        </div>

        <div class="col-5 bg-light m-2 justify-content-end">
            <div class="p-3 mb-1 bg-primary text-white text-center">Update Recipe</div>

            <EditForm Model="@UpdateRecipes">
                <div class="form-group">
                    <label for="title">Recipe Title</label>
                    <input type="text" id="title" class="form-control" @bind-value="@NewRecipes.Title" />
                </div>

                <div class="form-group">
                    <label for="serving">serving</label>
                    <input type="number" id="serving" class="form-control" @bind="@NewRecipes.Servings" />
                </div>

                <div class="form-group">
                    <label for="servngunit">servingunit</label>
                    <input type="text" id="serving unit" class="form-control" @bind="@NewRecipes.ServingsUnit" />
                </div>

                <div class="text-center p-3 mb-3">
                    <button class="btn btn-info" @onclick="UpdateRecipesData"> Update Recipe</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {

    List<Recipes> Recipes = new List<Recipes>();
    protected override async Task OnInitializedAsync()
    {
        await RefreshRecipes();
    }

    private async Task RefreshRecipes()
    {
        Recipes = await service.GetRecipesAsync();
    }

    public Recipes NewRecipes { get; set; } = new Recipes();
    private async Task AddNewRecipes()
    {
        await service.AddRecipesAsync(NewRecipes);
        NewRecipes = new Recipes();
        await RefreshRecipes();
    }

    Recipes UpdateRecipes = new Recipes();
    private void SetRecipesForUpdate(Recipes recipes)
    {
        UpdateRecipes = recipes;
    }

    private async Task UpdateRecipesData()
    {
        await service.UpdateRecipesAsync(UpdateRecipes);
        await RefreshRecipes();
    }

    private async Task DeleteRecipes(Recipes recipes)
    {
        await service.DeleteRecipesAsync(recipes);
        await RefreshRecipes();
    }
}